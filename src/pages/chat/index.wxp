<template>
  <view class="chat-container">
    <scroll-view
      scroll-y="{{true}}"
      scroll-into-view="{{scrollElId}}"
      scroll-with-animation="{{false}}"
      style="height: {{windowHeight}}px"
    >
      <view class="chat-list" wx:for="{{messages}}" wx:key="index" id="msg{{index + 1}}">
        <self-msg title="{{item.value}}" wx:if="{{item.from === 'self'}}" ></self-msg>
        <friend-msg wx:else title="{{item.value}}"></friend-msg>
      </view>
      <view class="scroll-bottom" id="scroll-bottom"></view>
    </scroll-view>
    <view class="input-container">
      <wxc-input
        type="text"
        placeholder=""
        mode="wrapped"
        class="msg-input"
        bind:confirm="handleSendMessage"
        value="{{inputText}}"
         ></wxc-input>
      <view class="send-btn">
        <wxc-button size="small" type="secondary">发送</wxc-button>
      </view>
    </view>
  </view>
</template>

<script>
export default {
  config: {
    navigationBarTitleText: '聊天',
    usingComponents: {
      'self-msg': '../component/chat/selfMessage',
      'friend-msg': '../component/chat/friendMessage',
      'wxc-input': '@minui/wxc-input',
      'wxc-button': '@minui/wxc-button',
    }
  },
  data: {
    messages: [],
    inputText: '',
    inputFocus: false,
    windowHeight: 500,
    scrollElId: 'scroll-bottom',
  },
  onLoad: function () {
    const info = wx.getSystemInfo({
      success: res => {
        this.setData({
          windowHeight: res.windowHeight - 60,
        })
      }
    })
  },
  handleSendMessage: function (e) {
    const inputText = e.detail.value
    this.setData({
      messages: [ ...this.data.messages, {
        from: 'self',
        value: inputText,
      }],
      inputText: '',
    }, () => {
      this.setData({
        scrollElId: 'scroll-bottom'
      })
      wx.request({
        url: 'https://openapi.tuling123.com/openapi/api/v2',
        method: 'POST',
        data: {
          "reqType":0,
            "perception": {
                "inputText": {
                    "text": inputText,
                },
            },
            "userInfo": {
                "apiKey": "f506a899e543447da4c1a765f4adee8e",
                "userId": "777229674890924032",
            }
        },
        success: (res) => {
          const { results } = res.data
          const { messages } = this.data
          const responseMessages = results.map(r => {
            return ({
              from: 'tulin',
              value: r.values.text,
            })
          })
          this.setData({
            messages: [...messages, ...responseMessages],
          }, () => {
            this.setData({
              scrollElId: 'scroll-bottom'
            })
          })
        }
      })
    })
  }
}
</script>

<style>
::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
}
.chat-container {
  padding-bottom: 100px;
}
.input-container {
  box-sizing: border-box;
  position: fixed;
  width: 100%;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  border-top: 1px solid #eee;
  background-color: #fff;
  z-index: 999;
  padding-bottom: 10px;
}
.msg-input {
  flex: 1;
  margin-top: -1px;
}
.send-btn {
  width: 120rpx;
  text-align: center;
}
.scroll-bottom {
  margin-top: 50px;
}
</style>
